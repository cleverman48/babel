{
  "version": 3,
  "names": [
    "createRequire",
    "path",
    "WatchOptions",
    "FSWatcher",
    "fileToDeps",
    "Map",
    "Set",
    "depToFiles",
    "isWatchMode",
    "watcher",
    "watchQueue",
    "hasStarted",
    "enable",
    "enableGlobbing",
    "requireChokidar",
    "options",
    "disableGlobbing",
    "persistent",
    "ignoreInitial",
    "awaitWriteFinish",
    "stabilityThreshold",
    "pollInterval",
    "on",
    "unwatchFile",
    "startWatcher",
    "dep",
    "add",
    "clear",
    "console",
    "log",
    "watch",
    "filename",
    "Error",
    "resolve",
    "onFilesChange",
    "callback",
    "filenames",
    "event",
    "cause",
    "absoluteFile",
    "get",
    "updateExternalDependencies",
    "dependencies",
    "absFilename",
    "absDependencies",
    "Array",
    "from",
    "deps",
    "has",
    "removeFileDependency",
    "set",
    "delete",
    "size",
    "unwatch",
    "require",
    "import",
    "meta",
    "url",
    "process",
    "env",
    "BABEL_8_BREAKING",
    "parseInt",
    "versions",
    "node",
    "err",
    "error"
  ],
  "sources": [
    "fixtures/sourcemaps/real-world-babel-file1/input.ts"
  ],
  "sourcesContent": [
    "// From packages\\babel-cli\\src\\babel\\watcher.ts\n\nimport { createRequire } from \"module\";\nimport path from \"path\";\nimport type { WatchOptions, FSWatcher } from \"chokidar\";\n\nconst fileToDeps = new Map<string, Set<string>>();\nconst depToFiles = new Map<string, Set<string>>();\n\nlet isWatchMode = false;\nlet watcher: FSWatcher;\nconst watchQueue = new Set<string>();\nlet hasStarted = false;\n\nexport function enable({ enableGlobbing }: { enableGlobbing: boolean }) {\n  isWatchMode = true;\n\n  const { FSWatcher } = requireChokidar();\n\n  const options: WatchOptions = {\n    disableGlobbing: !enableGlobbing,\n    persistent: true,\n    ignoreInitial: true,\n    awaitWriteFinish: {\n      stabilityThreshold: 50,\n      pollInterval: 10,\n    },\n  };\n  watcher = new FSWatcher(options);\n\n  watcher.on(\"unlink\", unwatchFile);\n}\n\nexport function startWatcher() {\n  hasStarted = true;\n\n  for (const dep of watchQueue) {\n    watcher.add(dep);\n  }\n  watchQueue.clear();\n\n  watcher.on(\"ready\", () => {\n    console.log(\"The watcher is ready.\");\n  });\n}\n\nexport function watch(filename: string): void {\n  if (!isWatchMode) {\n    throw new Error(\n      \"Internal Babel error: .watch called when not in watch mode.\",\n    );\n  }\n\n  if (!hasStarted) {\n    watchQueue.add(path.resolve(filename));\n  } else {\n    watcher.add(path.resolve(filename));\n  }\n}\n\n/**\n * Call @param callback whenever a dependency (source file)/\n * external dependency (non-source file) changes.\n *\n * Handles mapping external dependencies to their corresponding\n * dependencies.\n */\nexport function onFilesChange(\n  callback: (filenames: string[], event: string, cause: string) => void,\n): void {\n  if (!isWatchMode) {\n    throw new Error(\n      \"Internal Babel error: .onFilesChange called when not in watch mode.\",\n    );\n  }\n\n  watcher.on(\"all\", (event, filename) => {\n    if (event !== \"change\" && event !== \"add\") return;\n\n    const absoluteFile = path.resolve(filename);\n    callback(\n      [absoluteFile, ...(depToFiles.get(absoluteFile) ?? [])],\n      event,\n      absoluteFile,\n    );\n  });\n}\n\nexport function updateExternalDependencies(\n  filename: string,\n  dependencies: Set<string>,\n) {\n  if (!isWatchMode) return;\n\n  // Use absolute paths\n  const absFilename = path.resolve(filename);\n  const absDependencies = new Set(\n    Array.from(dependencies, dep => path.resolve(dep)),\n  );\n\n  const deps = fileToDeps.get(absFilename);\n  if (deps) {\n    for (const dep of deps) {\n      if (!absDependencies.has(dep)) {\n        removeFileDependency(absFilename, dep);\n      }\n    }\n  }\n  for (const dep of absDependencies) {\n    let deps = depToFiles.get(dep);\n    if (!deps) {\n      depToFiles.set(dep, (deps = new Set()));\n\n      if (!hasStarted) {\n        watchQueue.add(dep);\n      } else {\n        watcher.add(dep);\n      }\n    }\n\n    deps.add(absFilename);\n  }\n\n  fileToDeps.set(absFilename, absDependencies);\n}\n\nfunction removeFileDependency(filename: string, dep: string) {\n  const deps = depToFiles.get(dep) as Set<string>;\n  deps.delete(filename);\n\n  if (deps.size === 0) {\n    depToFiles.delete(dep);\n\n    if (!hasStarted) {\n      watchQueue.delete(dep);\n    } else {\n      watcher.unwatch(dep);\n    }\n  }\n}\n\nfunction unwatchFile(filename: string) {\n  const deps = fileToDeps.get(filename);\n  if (!deps) return;\n\n  for (const dep of deps) {\n    removeFileDependency(filename, dep);\n  }\n  fileToDeps.delete(filename);\n}\n\nfunction requireChokidar(): any {\n  const require = createRequire(import.meta.url);\n\n  try {\n    return process.env.BABEL_8_BREAKING\n      ? require(\"chokidar\")\n      : parseInt(process.versions.node) >= 8\n      ? require(\"chokidar\")\n      : require(\"@nicolo-ribaudo/chokidar-2\");\n  } catch (err) {\n    console.error(\n      \"The optional dependency chokidar failed to install and is required for \" +\n        \"--watch. Chokidar is likely not supported on your platform.\",\n    );\n    throw err;\n  }\n}"
  ],
  "mappings": "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"
}